#!/bin/bash

if [ "$LEFTHOOK" = "0" ]; then
  exit 0
fi

if [ -t 1 ] ; then
  exec < /dev/tty ; # <- enables interactive shell
fi

dir="$(git rev-parse --show-toplevel)"

call_lefthook()
{
  if lefthook -h >/dev/null 2>&1
  then
    eval lefthook $@
  elif test -f "$dir/node_modules/@arkweid/lefthook/bin/lefthook"
  then
    eval "$dir/node_modules/@arkweid/lefthook/bin/lefthook $@"
  elif bundle exec lefthook -h >/dev/null 2>&1
  then
    bundle exec lefthook $@
  elif npx @arkweid/lefthook -h >/dev/null 2>&1
  then
    npx @arkweid/lefthook $@
  elif yarn lefthook -h >/dev/null 2>&1
  then
    yarn lefthook $@
  else
    echo "Can't find lefthook in PATH"
  fi
}



call_lefthook "run post-merge $@"

# branch_name=$( git branch | grep "*" | sed "s/\* //" )
# reflog_message=$( git reflog -1 )
# merged_branch_name=$( echo $reflog_message | cut -d" " -f 4 | sed "s/://" )

# [[ $reflog_message =~ "pull" ]] && exit 0
# [[ $merged_branch_name = "master" ]] && exit 0

# echo "You've just merged the branch \"$merged_branch_name\" into \"$branch_name\". "
# exec < /dev/tty
# read -p "Do you want to delete the \"$merged_branch_name\" branch? (Y/n) " answer

# if [[ "$answer" == "Y" ]]; then
#   echo "Deleting local branch \"$merged_branch_name\""
#   git branch -d $merged_branch_name

#   echo "Deleting remote branch"
#   git push origin --delete $merged_branch_name

#   exit 1
# else
#   echo "Did not delete the \"$merged_branch_name\" branch"
# fi
